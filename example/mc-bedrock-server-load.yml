# Server loaded with an archived world
apiVersion: 'agones.dev/v1'
kind: GameServer
metadata:
  generateName: 'mc-bedrock-' # Generates a unique name for GameServer and Pod
spec:
  container: mc-server # Minecraft server container name
  ports:
    - name: mc
      # "Dynamic" (default) the system allocates a free hostPort for the gameserver (default 7000-8000), for game clients to connect to
      portPolicy: Dynamic
      # The name of the container to open the port on. Defaults to the game server container if omitted or empty.
      container: mc-server
      # the port that is being opened on the game server process
      containerPort: 19132
      # Bedrock uses UDP to connect players
      protocol: UDP
  # Health checking for the running game server
  health:
    # Number of seconds after the container has started before health check is initiated.
    initialDelaySeconds: 60
    # If the `Health()` function doesn't get called at least once every period (seconds), then
    # the game server is not healthy.
    periodSeconds: 12
    # Minimum consecutive failures for the health probe to be considered failed after having succeeded.
    failureThreshold: 5
  template:
    metadata:
      annotations:
        agones.dev/sdk-backup: mc-bedrock-6grm6-2021-05-10T04:04:56Z.zip # mc-load will download this archived world from storage
    spec:
      initContainers:
        - name: mc-load
          image: saulmaldonado/agones-mc # backup
          args:
            - load
            - --gcp-bucket-name=agones-minecraft-mc-worlds # GCP Cloud storage bucket name for world archives
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name # GameServer name ref for logging
            - name: BACKUP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['agones.dev/sdk-backup'] # ref to agones.dev/sdk-backup to download archived world
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data # shared vol with mc-server
              name: world-vol

      containers:
        - name: mc-server
          image: saulmaldonado/minecraft-bedrock-server # Custom minecraft bedrock server image
          imagePullPolicy: Always
          env: # Full list of ENV variables at https://github.com/saulmaldonado/docker-minecraft-bedrock-server
            - name: EULA
              value: "TRUE"
            - name: WORLD
              value: /data/world.zip
          volumeMounts:
            - mountPath: /data # shared vol with mc-load and mc-backup
              name: world-vol

        - name: mc-monitor
          image: saulmaldonado/agones-mc
          args:
            - monitor
            - --attempts=5 # matches spec.health.failureThreshold
            - --initial-delay=60s # matches spec.health.initialDelaySeconds
            - --interval=10s # below spec.health.periodSecond
            - --timeout=10s # matches interval
            - --port=19132 # matches mc-server containerPort
            - --edition=bedrock # bedrock edition
          imagePullPolicy: Always

        - name: mc-backup
          image: saulmaldonado/agones-mc # backup
          args:
            - backup
            - --gcp-bucket-name=agones-minecraft-mc-worlds # GCP Cloud storage bucket name for world archives
            - --backup-cron=0 */6 * * * # crontab for recurring backups. omiting flag will only run backup once
            - --initial-delay=60s # delay for mc-server to build world before scheduling backup jobs
            - --edition=bedrock
          env:
            - name: NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name # GameServer ref for naming backup zip files
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data # shared vol with mc-server
              name: world-vol
      volumes:
        - name: world-vol # shared vol between containers. will not persist bewteen restarts
          emptyDir: {}
